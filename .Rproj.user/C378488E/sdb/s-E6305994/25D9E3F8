{
    "contents" : "# Found on http://lamages.blogspot.com.au/2013/04/how-to-change-alpha-value-of-colours-in.html\nadd.alpha <- function(col, alpha=1){\n  if(missing(col))\n    stop(\"Please provide a vector of colours.\")\n  apply(sapply(col, col2rgb)/255, 2,\n        function(x)\n          rgb(x[1], x[2], x[3], alpha=alpha))\n}\n\n#' @title Identify Points in a scatter plots\n#' @param x, y coordinates of points in a scatter plot.\n#' @param n the maximum number of points to be identified.\n#' @param col points color\n#' @param pch points size\n#' @param alpha alpha level of the selected points\n#' @param remove.points Should the selected points be removed from the plots?\n#' @param ... additional arguments to \\code{\\link{identify}}\n#' @export\nidentifyPch <- function(x, y = NULL, n = length(x),  col=\"black\", pch = 19, alpha, remove.points=FALSE, ...){\n  if(remove.points){\n    col=\"white\"\n    pch=21\n  }\n  if(length(col)==1) col=rep(col,length(x))\n  if(!missing(alpha)) col=add.alpha(col,alpha)\n  xy <- xy.coords(x, y); x <- xy$x; y <- xy$y\n  sel <- rep(FALSE, length(x)); res <- integer(0)\n  while(sum(sel) < n) {\n    ans <- identify(x[!sel], y[!sel], n = 1, plot = FALSE, ...)\n    if(!length(ans)) break\n    ans <- which(!sel)[ans]\n    points(x[ans], y[ans], col = col[ans], pch = pch)\n    sel[ans] <- TRUE\n    res <- c(res, ans)\n  }\n  res\n}\n\n#' @title Plot points and identify them\n#' @param x, y coordinates of points in a scatter plot.\n#' @param group a grouping factor to determine colors on the plot.\n#' @param ... additional arguments to \\code{\\link{identifyPch}}\n#' @return An index vector of selected points.\n#' @export\n#' @examples\n#' \\donttest{\n#' idx=with(iris,plot.and.identify(Sepal.Length,Sepal.Width,Species))\n#' }\nplot.and.identify=function(x,y,group,...){\n  group=as.factor(group)\n  n.group=length(levels(group))\n  if(n.group==1){\n    colors=\"black\"\n  }else{\n    colors=gg_color_hue(n.group)\n  }\n  col=colors[group]\n  plot(x,y,col=col,xlab=\"\",ylab=\"\")\n  identifyPch(x,y,col=col,...)\n}\n\n#' @title Identify points based on a ggplot2 object\n#' @param g a ggplot2 object\n#' @param ... additional arguments to \\code{\\link{plot.and.identify}}\n#' @details The identification phase is not done on the ggplot2 figure but on a basic plot ressembing the original ggplot2 object.\n#' @return An index vector of selected points.\n#' @export\n#' @examples\n#' \\donttest{\n#' g=ggplot(data=mtcars,aes(x=wt,y=disp))+\n#'  geom_point(aes(color=as.factor(cyl)))\n#' idx=identify.ggplot2(g)\n#' }\nidentify.ggplot2=function(g,...){\n  data=ggplot_build(g)$data[[1]]\n  plot.and.identify(data$x,data$y,data$group,...)\n}\n\n#' @title Add names to ggplot2 scatter plot points\n#' @param g a ggplot2 object\n#' @param idx index of the names to add. If \\code{idx} is not specified, \\code{\\link{identify.ggplot2}} is called.\n#' @param label the name of the variable to be used for the names. If \\code{label} is not specified, the indexes \\code{idx} are used instead.\n#' @param ... additional arguments to \\code{\\link{geom_text}}\n#' @return The ggplot2 object \\code{g} with names added. \n#' @export\n#' @examples\n#' \\donttest{\n#' g=ggplot(data=mtcars,aes(x=wt,y=disp))+\n#'  geom_point(aes(color=as.factor(cyl)))\n#' add_names.ggplot2(g)\n#' }\nadd_names.ggplot2=function(g,idx,label,...){\n  if(missing(idx)) idx=identify.ggplot2(g)\n  data=g$data\n  \n  if(missing(label)){\n    data$label.=seq(1,nrow(data))\n    label=\"label.\"\n  }\n  g+geom_text(data=data[idx,],aes_string(label=label),...)\n}",
    "created" : 1385352668539.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4183477682",
    "id" : "25D9E3F8",
    "lastKnownWriteTime" : 1385354875,
    "path" : "~/R&D/R packages/Source packages/iggplot2/R/identify.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}